

MongoDB:

Introduction to MongoDB: I started by getting familiar with MongoDB, understanding its architecture, and exploring its role in the MERN stack. I learned about collections, documents, and the BSON data format.
Advanced Queries: As I progressed, I delved into more complex queries, such as using the aggregation pipeline, understanding the $group, $match, $project, and $unwind operators. I also explored MongoDBâ€™s indexing and performance optimization techniques.
Practical Application: Throughout my learning, I applied MongoDB queries in real-world scenarios, such as grouping users by attributes like role, city, gender, skills, and age. This hands-on practice solidified my understanding and highlighted the importance of efficient data management.
Node.js and Express.js:

Introduction to Node.js: I learned about Node.js, its non-blocking I/O model, and its ability to handle multiple concurrent connections efficiently. I also explored the core modules and how to create basic server-side applications.
Express.js Framework: Moving on to Express.js, I understood how it simplifies routing, middleware management, and the overall structure of Node.js applications. I practiced creating RESTful APIs and explored CRUD operations.
Middleware and Authentication: A significant portion of my learning was dedicated to middleware in Express.js, which is essential for tasks like authentication, logging, and error handling. I implemented JWT-based authentication and understood how to secure APIs effectively.
Front-End Technologies (React):

React Basics: I revisited React, focusing on creating reusable components, managing state with hooks, and handling events. I also learned about React Router for client-side routing.
Project Implementation: One of the key projects was a weather application, where I implemented React components, fetched data from an API, and displayed dynamic content. This project helped me grasp the practical use of React in building interactive user interfaces.
Version Control and Deployment:

Git and GitHub: Throughout these 34 days, I extensively used Git for version control, creating branches, merging changes, and collaborating on code. My GitHub repositories reflect the various stages of my learning journey.
Deployment: I also explored deploying web applications using platforms like GitHub Pages and Netlify, ensuring that my projects are not only functional locally but also accessible online.